#include<bits/stdc++.h>
using namesapce std;

const int MAX = 100000;
vector<int> graph[MAX];
bool visited[MAX];

void dfs(int node){
 stack<int> s;
 s.push(node);
 
 while(!s.empty()){
	int curr_node=s.top();
	s.pop();
	if(!visited[curr_node]){
	visited[curr_node]=true;
	
	if(visited[curr_node]){
	
		cout<<curr_node<<" ";

	}
	
	#pragma omp parallel for
	for(int i=0; i<graph[curr_node].size();i++){
	
	int adj_node=graph[curr_node][i];
	if(!visited[adj_node]){

	s.push(adj_node);
}		
}
}
}
}

int main(){
int n,m,strt;
cout<<"Enter Node, Edges, Start Node : ";
cin>>n>>m>>strt;
cout<<"Enter the No of Pairs : ";
for(int i=0; i<m; i++){
int u,v;
cin>>u>>v;
graph[u].push_back(v)
graph[v].push_back(u)
}
#pragma omp parallel for
for(int i=0;i<n;i++){
	visited[i]=false;
}
dfs(strt);
return 0;
}

g++ -o filenm -fopenmp filenm.cpp
./filenm

5 6 1

1 2
1 3
2 3
2 4
3 5
4 5